name: CI/CD Pipeline for Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job 1: Initialize Submodules and Build/Test the Application
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      # Checkout the repository with submodules
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and Test Backend
        working-directory: ./BackendModule
        run: mvn clean verify -Dmaven.test.skip=false

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build Frontend
        working-directory: ./FrontendModule
        run: |
          npm install
          npm run build

  # Job 2: Build Docker Images
  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code with Submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Backend Image
        working-directory: ./BackendModule
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest

      - name: Build and Push Frontend Image
        working-directory: ./FrontendModule
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

  # Job 3: Deploy to Production
  deploy:
    needs: docker-build
    runs-on: ubuntu-latest

    steps:
      - name: SSH to Server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          port: ${{ secrets.SERVER_PORT }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            # Pull the latest Docker images
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

            # Stop and remove any running containers
            docker stop backend || true
            docker stop frontend || true

            # Run the containers
            docker run -d --rm --name backend -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest
            docker run -d --rm --name frontend -p 4200:4200 ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

            echo "Deployment Complete!"
