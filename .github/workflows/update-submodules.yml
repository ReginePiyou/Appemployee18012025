name: Update Submodules

on:
  repository_dispatch:
    types:
      - update_submodules

jobs:
  update-references:
    runs-on: ubuntu-latest

    steps:
      # Set up SSH key for accessing repositories
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      # Checkout the repository with submodules
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Configure Git user identity
      - name: Configure Git user identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # # Reinitialize BackendModule submodule
      # - name: Reinitialize BackendModule
      #   run: |
      #     git submodule deinit -f -- BackendModule
      #     rm -rf .git/modules/BackendModule
      #     git rm -f BackendModule
      #     git submodule add -b main git@github.com:ReginePiyou/CRUDAPPBackend.git BackendModule
      #     git submodule update --init --recursive BackendModule

      # # Reinitialize FrontendModule submodule
      # - name: Reinitialize FrontendModule
      #   run: |
      #     git submodule deinit -f -- FrontendModule
      #     rm -rf .git/modules/FrontendModule
      #     git rm -f FrontendModule
      #     git submodule add -b main git@github.com:ReginePiyou/CRUDAPPFrontend.git FrontendModule
      #     git submodule update --init --recursive FrontendModule

      # # Commit and push reinitialized submodules
      # - name: Commit and push reinitialization
      #   run: |
      #     git add .
      #     git commit -m "Reinitialize submodules"
      #     git push origin main

      

      # Update submodules without reinitialization
      - name: Update BackendModule submodule
        run: |
          cd BackendModule
          git fetch
          git checkout main
          git pull origin main
          cd ..

      - name: Update FrontendModule submodule
        run: |
          cd FrontendModule
          git fetch
          git checkout main
          git pull origin main
          cd ..

      # Commit and push updated submodule references if there are changes
      - name: Commit and push submodule updates
        run: |
          git add .
          git commit -m "Update submodule references" || echo "No changes to commit"
          git push origin main








































# # name: Update Submodules

# # on:
# #   repository_dispatch:
# #     types:
# #       - update_submodules

# # jobs:
# #   update-references:
# #     runs-on: ubuntu-latest

# #     steps:
# #     # Set up SSH key for BackendModule
# #     - name: Set up SSH key for BackendModule
# #       run: |
# #         mkdir -p ~/.ssh
# #         echo "${{ secrets.SSH_PRIVATE_KEY_BACKEND }}" > ~/.ssh/id_rsa_backend
# #         chmod 600 ~/.ssh/id_rsa_backend
# #         ssh-keyscan github.com >> ~/.ssh/known_hosts
# # # echo -e "Host github.com\n  Hostname github.com\n  IdentityFile ~/.ssh/id_rsa_backend\n  StrictHostKeyChecking no" >> ~/.ssh/config

# #     # Set up SSH key for FrontendModule
# #     - name: Set up SSH key for FrontendModule
# #       run: |
# #         echo "${{ secrets.SSH_PRIVATE_KEY_FRONTEND }}" > ~/.ssh/id_rsa_frontend
# #         chmod 600 ~/.ssh/id_rsa_frontend
# #     # echo -e "Host github.com\n  Hostname github.com\n  IdentityFile ~/.ssh/id_rsa_frontend\n  StrictHostKeyChecking no" >> ~/.ssh/config


# # # Checkout the repository with submodules
# #     - name: Checkout repository with submodules
# #       uses: actions/checkout@v3
# #       with:
# #         submodules: recursive

# #  # Synchronize submodules
# #     - name: Synchronize submodules
# #       run: |
# #         git submodule sync

# #     # Update submodules
# #     - name: Update submodules
# #       run: |
# #         git submodule update --remote --merge
# #         git commit -am "Update submodule references"
# #         git push origin main



# name: Update Submodules

# on:
#   repository_dispatch:
#     types:
#       - update_submodules

# jobs:
#   update-references:
#     runs-on: ubuntu-latest

#     steps:
#       # Set up SSH key for accessing repositories
#       - name: Set up SSH key
#         run: |
#           mkdir -p ~/.ssh
#           echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
#           chmod 600 ~/.ssh/id_rsa
#           ssh-keyscan github.com >> ~/.ssh/known_hosts

#       # Checkout the repository with submodules
#       - name: Checkout repository
#         uses: actions/checkout@v3
#         with:
#           submodules: recursive
#           ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

#       # Configure Git user identity
#       - name: Configure Git user identity
#         run: |
#           git config --global user.name "GitHub Actions"
#           git config --global user.email "actions@github.com"

#       # # Reinitialize BackendModule submodule
#       # - name: Reinitialize BackendModule
#       #   run: |
#       #     git submodule deinit -f -- BackendModule
#       #     rm -rf .git/modules/BackendModule
#       #     git rm -f BackendModule
#       #     git submodule add -b main git@github.com:ReginePiyou/CRUDAPPBackend.git BackendModule
#       #     git submodule update --init --recursive BackendModule

#       # # Reinitialize FrontendModule submodule
#       # - name: Reinitialize FrontendModule
#       #   run: |
#       #     git submodule deinit -f -- FrontendModule
#       #     rm -rf .git/modules/FrontendModule
#       #     git rm -f FrontendModule
#       #     git submodule add -b main git@github.com:ReginePiyou/CRUDAPPFrontend.git FrontendModule
#       #     git submodule update --init --recursive FrontendModule

#       # # Commit and push reinitialized submodules
#       # - name: Commit and push reinitialization
#       #   run: |
#       #     git add .
#       #     git commit -m "Reinitialize submodules"
#       #     git push origin main

#       # Update submodules
#       - name: Update submodules
#         run: |
#           git submodule update --remote --merge
#           git commit -am "Update submodule references" || echo "No changes to commit"
#           git push origin main













# name: Update Submodules

# on:
#   repository_dispatch:
#     types:
#       - update_submodules

# jobs:
#   update-references:
#     runs-on: ubuntu-latest

#     steps:
#       # Set up SSH key for BackendModule
#       - name: Set up SSH key for BackendModule
#         run: |
#           mkdir -p ~/.ssh
#           echo "${{ secrets.SSH_PRIVATE_KEY_BACKEND }}" > ~/.ssh/id_rsa_backend
#           chmod 600 ~/.ssh/id_rsa_backend
#           ssh-keyscan github.com >> ~/.ssh/known_hosts
#           echo -e "Host backend.github.com\n  Hostname github.com\n  IdentityFile ~/.ssh/id_rsa_backend\n  StrictHostKeyChecking no" >> ~/.ssh/config

#       # Set up SSH key for FrontendModule
#       - name: Set up SSH key for FrontendModule
#         run: |
#           echo "${{ secrets.SSH_PRIVATE_KEY_FRONTEND }}" > ~/.ssh/id_rsa_frontend
#           chmod 600 ~/.ssh/id_rsa_frontend
#           echo -e "Host frontend.github.com\n  Hostname github.com\n  IdentityFile ~/.ssh/id_rsa_frontend\n  StrictHostKeyChecking no" >> ~/.ssh/config

#       # Checkout the repository with submodules
#       - name: Checkout repository with submodules
#         uses: actions/checkout@v3
#         with:
#           submodules: recursive
#           ssh-key: ${{ secrets.SSH_PRIVATE_KEY_BACKEND }}

#       # Synchronize submodules
#       - name: Synchronize submodules
#         run: |
#           git submodule sync

#       # Update submodules
#       - name: Update submodules
#         run: |
#           GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa_backend -F ~/.ssh/config" git submodule foreach 'git fetch && git checkout master && git merge origin/master'
#           GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa_frontend -F ~/.ssh/config" git submodule foreach 'git fetch && git checkout master && git merge origin/master'
#           git commit -am "Update submodule references"
#           git push origin main






# name: Update Submodules

# on:
#   repository_dispatch:
#     types:
#       - update_submodules

# jobs:
#   update-references:
#     runs-on: ubuntu-latest

#     steps:
#       # Set up SSH keys and configs
#       - name: Set up SSH keys
#         run: |
#           mkdir -p ~/.ssh
#           echo "${{ secrets.SSH_PRIVATE_KEY_BACKEND }}" > ~/.ssh/id_rsa_backend
#           echo "${{ secrets.SSH_PRIVATE_KEY_FRONTEND }}" > ~/.ssh/id_rsa_frontend
#           chmod 600 ~/.ssh/id_rsa_backend ~/.ssh/id_rsa_frontend
#           ssh-keyscan github.com >> ~/.ssh/known_hosts
#           echo -e "
#           Host backend.github.com
#             Hostname github.com
#             IdentityFile ~/.ssh/id_rsa_backend
#             StrictHostKeyChecking no
#           Host frontend.github.com
#             Hostname github.com
#             IdentityFile ~/.ssh/id_rsa_frontend
#             StrictHostKeyChecking no
#           " >> ~/.ssh/config

#       # Test SSH connections
#       - name: Test SSH connection for BackendModule
#         run: ssh -T git@backend.github.com || [ $? -eq 1 ]
#       - name: Test SSH connection for FrontendModule
#         run: ssh -T git@frontend.github.com || [ $? -eq 1 ]

#       # Clone the main repository
#       - name: Clone the main repository with submodules
#         run: |
#           GIT_SSH_COMMAND="ssh -F ~/.ssh/config" git clone --recurse-submodules git@github.com:ReginePiyou/Appemployee18012025.git .

#       # Update submodules
#       - name: Update submodules
#         run: |
#           GIT_SSH_COMMAND="ssh -F ~/.ssh/config" git submodule update --init --recursive

#       - name: Commit and push updates
#         run: |
#           git add .
#           git commit -m "Update submodule references" || echo "No changes to commit"
#           git push origin main
